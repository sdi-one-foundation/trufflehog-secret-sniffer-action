name: 'Secret Sniffer - TruffleHog'
description: 'Github action runs TruffleHog to detect secrets in the repository.
  If secrets are found, it will fail the action and notify the team via MS Teams.'
inputs:
  ses-username:
    description: 'Username for the AWS SES service to send email alerts'
    required: true
  ses-password:
    description: 'Password for the AWS SES service to send email alerts'
    required: true
runs:
  using: "composite"
  steps:
      - shell: bash
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "depth=$(($(jq length <<< '${{ toJson(github.event.commits) }}') + 2))" >> $GITHUB_ENV
            echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
          fi
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "depth=$((${{ github.event.pull_request.commits }}+2))" >> $GITHUB_ENV
            echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          fi

      - uses: actions/checkout@v3
        with:
          ref: ${{env.branch}}
          fetch-depth: ${{env.depth}}

      # Use the official TruffleHog action
      - uses: trufflesecurity/trufflehog@main
        id: trufflehog
        with:
          extra_args: --json --results=verified,unknown
        continue-on-error: true

      - name: Capture TruffleHog output
        shell: bash
        run: |
          if [ "${{ steps.trufflehog.outcome }}" == "failure" ]; then
            echo "TRUFFLEHOG_FOUND_SECRETS=true" >> $GITHUB_ENV

            # The output should be available in the action logs
            # Let's capture it by running TruffleHog again and storing the output
            mkdir -p trufflehog_output

            # Use TruffleHog from the action to get the same results
            /trufflehog --json --results=verified,unknown --github-actions \
              git file://$(pwd) > trufflehog_raw_output.txt || true

            # Format as proper JSON array
            echo "[" > trufflehog_output.json
            cat trufflehog_raw_output.txt | grep -v "^{\"level\"" | tr '\n' ',' | sed 's/,$//' >> trufflehog_output.json
            echo "]" >> trufflehog_output.json
          else
            echo "No secrets found by TruffleHog"
          fi

      - name: Post findings to PR
        if: env.TRUFFLEHOG_FOUND_SECRETS == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ github.token }}
          script: |
            const fs = require('fs');
            let outputContent;
            try {
              outputContent = fs.readFileSync('trufflehog_output.json', 'utf8');
              // Try to parse and format it nicely for the PR comment
              const jsonData = JSON.parse(outputContent);
              outputContent = JSON.stringify(jsonData, null, 2);
            } catch (error) {
              console.error("Error processing TruffleHog output:", error);
              outputContent = "Error processing TruffleHog output, but secrets were detected.";
            }

            const commentBody = `## ⚠️ Security Alert: Secrets Detected

            TruffleHog has detected secrets in this pull request. Please review and remove any sensitive information.

            <details>
            <summary>Details (click to expand)</summary>

            \`\`\`json
            ${outputContent}
            \`\`\`
            </details>`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });

      - name: Send mail
        if: env.TRUFFLEHOG_FOUND_SECRETS == 'true'
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: email-smtp.us-east-1.amazonaws.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: ${{inputs.ses-username}}
          # Optional (recommended) mail server password:
          password: ${{inputs.ses-password}}
          # Required mail subject:
          subject: Secrets Found in ${{github.repository}} repository
          # Required recipients' addresses:
          to: alerts+foundation@one.singledigits.com
          # Required sender full name (address can be skipped):
          from: '"Foundation Alerts" <alerts+foundation@one.singledigits.com>'
          html_body: |
               <!DOCTYPE html>
               <html>
               <body>
               <h1>Secrets Found in the code of ${{github.repository}} repository</h1>
               <p>Please investigate immediately.</p></n>
               <p>You can find the repo at:</p></n>
               <a href="${{ github.server_url }}/${{ github.repository }}">${{ github.repository }}</a>
               </body>
               </html>
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: high
          # Optional nodemailerlog: true/false
          nodemailerlog: true
          # Optional nodemailerdebug: true/false if true lognodem will also be set true
          nodemailerdebug: true

      - name: Scan Results Status
        if: steps.trufflehog.outcome == 'failure'
        run: exit 1
        shell: bash
