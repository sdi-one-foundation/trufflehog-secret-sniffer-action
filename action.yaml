name: 'Secret Sniffer - TruffleHog'
description: 'Github action runs TruffleHog to detect secrets in the repository. If secrets are found, it will fail the action and notify the team via email.'
inputs:
  ses-username:
    description: 'Username for the AWS SES service to send email alerts'
    required: true
  ses-password:
    description: 'Password for the AWS SES service to send email alerts'
    required: true
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          echo "depth=$(($(jq length <<< '${{ toJson(github.event.commits) }}') + 2))" >> $GITHUB_ENV
          echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV
        fi
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "depth=$((${{ github.event.pull_request.commits }}+2))" >> $GITHUB_ENV
          echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
        fi

    - uses: actions/checkout@v3
      with:
        ref: ${{env.branch}}
        fetch-depth: ${{env.depth}}

    # Use the official TruffleHog action
    - uses: trufflesecurity/trufflehog@main
      id: trufflehog
      with:
        extra_args: --results=verified,unknown
      continue-on-error: true

    - name: Capture TruffleHog output
      shell: bash
      run: |
        if [ "${{ steps.trufflehog.outcome }}" == "failure" ]; then
          echo "TRUFFLEHOG_FOUND_SECRETS=true" >> $GITHUB_ENV

          # Create output directory
          mkdir -p trufflehog_output

          # Save the TruffleHog output to a temporary file
          echo "${{ steps.trufflehog.outputs.result }}" > trufflehog_temp.txt

          # The TruffleHog action doesn't provide structured output we can access directly
          # So we'll use the logs directly from the current process
          # Run TruffleHog again to get detailed output
          echo "Running TruffleHog to get detailed output..."
          docker run --rm -v "$(pwd):/pwd" -w /pwd trufflesecurity/trufflehog:latest git file:///pwd --json > trufflehog_raw_output.txt || true

          # Check if we got any output
          if [ -s trufflehog_raw_output.txt ]; then
            echo "Processing detailed TruffleHog output..."

            # Convert line-delimited JSON to array
            echo "[" > trufflehog_array.json
            cat trufflehog_raw_output.txt | grep -v "^{\"level\"" | grep -v "finished scanning" | tr '\n' ',' | sed 's/,$//' >> trufflehog_array.json
            echo "]" >> trufflehog_array.json

            # Process each finding to extract file and line information
            jq 'map(select(.SourceMetadata.Data.Git.file != null) | {
                "detection_time": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'",
                "repository": "${{ github.repository }}",
                "source": "TruffleHog GitHub Action",
                "file": .SourceMetadata.Data.Git.file,
                "line": .SourceMetadata.Data.Git.line,
                "detector_type": .DetectorName,
                "message": "A secret was detected in this repository. For security reasons, the actual secret is not displayed.",
                "recommendation": "Review this file for any sensitive information such as API keys, passwords, or private tokens."
              })' trufflehog_array.json > trufflehog_output.json
          fi

          # If processing failed or no detailed output, create a generic message
          if [ ! -s trufflehog_output.json ] || [ "$(cat trufflehog_output.json)" = "[]" ]; then
            echo '[{"detection_time":"'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'","repository":"${{ github.repository }}","source":"TruffleHog GitHub Action","message":"Secrets were detected in this repository. For security reasons, detailed information about the secrets is not displayed here. Please review the GitHub Actions log for more details.","recommendation":"Review recent changes for any sensitive information such as API keys, passwords, or private tokens."}]' > trufflehog_output.json
          fi
        else
          echo "No secrets found by TruffleHog"
        fi

    - name: Set event type
      if: env.TRUFFLEHOG_FOUND_SECRETS == 'true'
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "EVENT_TYPE=Pull Request" >> $GITHUB_ENV
          echo "EVENT_URL=${{ github.event.pull_request.html_url }}" >> $GITHUB_ENV

          # Create the full HTML for the PR card
          PR_CARD='<a href="${{ github.event.pull_request.html_url }}" class="link-card">
            <div class="link-card-icon">üîÄ</div>
            <div class="link-card-text">
              <p class="link-card-title">Pull Request</p>
              <p class="link-card-url">PR #${{ github.event.pull_request.number }}</p>
            </div>
          </a>'

          echo "PR_CARD<<EOF" >> $GITHUB_ENV
          echo "$PR_CARD" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        else
          echo "EVENT_TYPE=Push to ${{ github.ref_name }} branch" >> $GITHUB_ENV
          echo "EVENT_URL=${{ github.server_url }}/${{ github.repository }}/tree/${{ github.ref_name }}" >> $GITHUB_ENV
          echo "PR_CARD=" >> $GITHUB_ENV
        fi

    - name: Post findings to PR
      if: env.TRUFFLEHOG_FOUND_SECRETS == 'true' && github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        github-token: ${{ github.token }}
        script: |
          const fs = require('fs');
          let findings = [];

          try {
            const outputContent = fs.readFileSync('trufflehog_output.json', 'utf8');
            findings = JSON.parse(outputContent);
          } catch (error) {
            console.error("Error processing TruffleHog output:", error);
            findings = [{
              message: "Error processing TruffleHog output, but secrets were detected."
            }];
          }

          // Add findings to environment variable for email notification
          const findingsJSON = JSON.stringify(findings, null, 2);
          core.exportVariable('TRUFFLEHOG_FINDINGS', findingsJSON);

          // Build a table of findings if we have detailed information
          let secretsTable = '';
          if (findings.length > 0 && findings[0].file) {
            secretsTable = `
          | File | Line | Type |
          |------|------|------|
          ${findings.map(f => `| \`${f.file}\` | ${f.line || 'N/A'} | ${f.detector_type || 'Unknown'} |`).join('\n')}
          `;
          }

          const commentBody = `## ‚ö†Ô∏è Security Alert: Secrets Detected by TruffleHog ‚ö†Ô∏è
          This pull request has been scanned for secrets using TruffleHog, and sensitive information has been detected. Please review the findings below and take appropriate action to secure your repository.

          TruffleHog has detected secrets in this pull request. Please review and remove any sensitive information.
          ${secretsTable}

          <details>
          <summary>Details (click to expand)</summary>

          \`\`\`json
          ${JSON.stringify(findings, null, 2)}
          \`\`\`
          </details>

          **Important:** Committing secrets to a repository poses significant security risks. Please remove these secrets and consider them compromised.`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: commentBody
          });

    - name: Send mail
      if: env.TRUFFLEHOG_FOUND_SECRETS == 'true'
      uses: dawidd6/action-send-mail@v5
      with:
        server_address: email-smtp.us-east-1.amazonaws.com
        server_port: 465
        secure: true
        username: ${{inputs.ses-username}}
        password: ${{inputs.ses-password}}
        subject: Secrets Found in ${{github.repository}} repository
        to: alerts+foundation@one.singledigits.com
        from: '"Foundation Alerts" <alerts+foundation@one.singledigits.com>'
        html_body: |
          <!DOCTYPE html>
          <html>
          <head>
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                line-height: 1.6;
                color: #4a4a4a;
                max-width: 800px;
                margin: 0 auto;
                padding: 0;
                background-color: #f8f9fa;
              }
              .container {
                padding: 0;
                box-shadow: 0 8px 30px rgba(0,0,0,0.12);
                border-radius: 16px;
                overflow: hidden;
                margin: 20px;
              }
              .header {
                background: linear-gradient(135deg, #fe5196 0%, #f77062 100%);
                color: white;
                padding: 30px;
                position: relative;
              }
              h1 {
                margin: 0;
                font-size: 24px;
                font-weight: 600;
                letter-spacing: -0.5px;
              }
              h2 {
                font-size: 18px;
                font-weight: 500;
                margin-top: 30px;
                margin-bottom: 15px;
                color: #2e3440;
              }
              .content {
                background-color: white;
                padding: 30px;
              }
              .alert-card {
                background-color: white;
                border-radius: 12px;
                padding: 20px;
                margin-bottom: 24px;
                border-left: 4px solid #ff6b6b;
                box-shadow: 0 4px 6px rgba(0,0,0,0.04);
              }
              .event-tag {
                display: inline-block;
                background-color: #4c6ef5;
                color: white;
                font-size: 13px;
                font-weight: 500;
                padding: 5px 12px;
                border-radius: 99px;
                margin-bottom: 15px;
              }
              .btn {
                display: inline-block;
                background-color: #f8f9fa;
                color: #495057;
                text-decoration: none;
                padding: 10px 20px;
                border-radius: 8px;
                font-weight: 500;
                font-size: 14px;
                border: 1px solid #dee2e6;
                margin-right: 8px;
                margin-bottom: 8px;
                transition: all 0.2s;
              }
              .btn:hover {
                background-color: #e9ecef;
              }
              .btn-primary {
                background-color: #228be6;
                color: white;
                border: none;
              }
              .btn-primary:hover {
                background-color: #1c7ed6;
              }
              .btn-danger {
                background-color: #fa5252;
                color: white;
                border: none;
              }
              .btn-danger:hover {
                background-color: #e03131;
              }
              .code-block {
                background-color: #f1f3f5;
                border-radius: 8px;
                padding: 15px;
                margin: 15px 0;
                overflow-x: auto;
                font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
                font-size: 13px;
                line-height: 1.4;
                color: #343a40;
                border: 1px solid #dee2e6;
              }
              .footer {
                text-align: center;
                padding: 30px;
                color: #868e96;
                font-size: 13px;
                background-color: #f8f9fa;
                border-top: 1px solid #e9ecef;
              }
              .icon {
                display: inline-block;
                width: 24px;
                height: 24px;
                vertical-align: middle;
                margin-right: 8px;
              }
              .link-card {
                background-color: white;
                border-radius: 12px;
                padding: 16px;
                margin-bottom: 16px;
                display: flex;
                align-items: center;
                box-shadow: 0 4px 6px rgba(0,0,0,0.04);
                text-decoration: none;
                color: #495057;
                border: 1px solid #e9ecef;
                transition: all 0.2s;
              }
              .link-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.08);
              }
              .link-card-icon {
                background-color: #e7f5ff;
                width: 40px;
                height: 40px;
                border-radius: 10px;
                display: flex;
                align-items: center;
                justify-content: center;
                margin-right: 16px;
                flex-shrink: 0;
              }
              .link-card-text {
                flex-grow: 1;
              }
              .link-card-title {
                font-weight: 600;
                margin: 0 0 4px 0;
                color: #343a40;
              }
              .link-card-url {
                font-size: 12px;
                color: #868e96;
                margin: 0;
              }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>‚ö†Ô∏è Security Alert: Secrets Detected</h1>
              </div>
              <div class="content">
                <span class="event-tag">${{ env.EVENT_TYPE }}</span>

                <div class="alert-card">
                  <p><strong>Secrets have been detected in the ${{github.repository}} repository.</strong></p>
                  <p>Please investigate and remediate immediately. Exposed secrets pose a significant security risk.</p>
                </div>

                <h2>üîó Links</h2>

                <a href="${{ github.server_url }}/${{ github.repository }}" class="link-card">
                  <div class="link-card-icon">üìÅ</div>
                  <div class="link-card-text">
                    <p class="link-card-title">Repository</p>
                    <p class="link-card-url">${{ github.repository }}</p>
                  </div>
                </a>

                <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="link-card">
                  <div class="link-card-icon">üîç</div>
                  <div class="link-card-text">
                    <p class="link-card-title">View Action Run</p>
                    <p class="link-card-url">Actions ‚Ä∫ Run #${{ github.run_id }}</p>
                  </div>
                </a>

                ${{ env.PR_CARD }}

                <h2>üîç Detection Details</h2>
                <div class="code-block">${{ env.TRUFFLEHOG_FINDINGS }}</div>
              </div>

              <div class="footer">
                <p><strong>SingleDigits Foundation Team</strong></p>
                <p>This is an automated security alert. Please do not reply to this email.</p>
                <p>For assistance, contact the security team.</p>
              </div>
            </div>
          </body>
          </html>
        ignore_cert: true
        convert_markdown: true
        priority: high
        nodemailerlog: true
        nodemailerdebug: true

    - name: Scan Results Status
      if: steps.trufflehog.outcome == 'failure'
      run: exit 1
      shell: bash
